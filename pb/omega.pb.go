// Code generated by protoc-gen-go. DO NOT EDIT.
// source: omega.proto

package pb // import "github.com/ml444/scheduler/pb/pb"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// strategy
type Policy int32

const (
	Policy_PolicyConcurrence Policy = 0
	Policy_PolicySerial      Policy = 1
)

var Policy_name = map[int32]string{
	0: "PolicyConcurrence",
	1: "PolicySerial",
}
var Policy_value = map[string]int32{
	"PolicyConcurrence": 0,
	"PolicySerial":      1,
}

func (x Policy) String() string {
	return proto.EnumName(Policy_name, int32(x))
}
func (Policy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_omega_a2f01a01f33ca492, []int{0}
}

type PubReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	TopicName            string   `protobuf:"bytes,2,opt,name=topic_name,json=topicName" json:"topic_name,omitempty"`
	Partition            uint32   `protobuf:"varint,3,opt,name=partition" json:"partition,omitempty"`
	HashCode             uint64   `protobuf:"varint,4,opt,name=hash_code,json=hashCode" json:"hash_code,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *PubReq) Reset()         { *m = PubReq{} }
func (m *PubReq) String() string { return proto.CompactTextString(m) }
func (*PubReq) ProtoMessage()    {}
func (*PubReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_omega_a2f01a01f33ca492, []int{0}
}
func (m *PubReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubReq.Unmarshal(m, b)
}
func (m *PubReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubReq.Marshal(b, m, deterministic)
}
func (dst *PubReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubReq.Merge(dst, src)
}
func (m *PubReq) XXX_Size() int {
	return xxx_messageInfo_PubReq.Size(m)
}
func (m *PubReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PubReq.DiscardUnknown(m)
}

var xxx_messageInfo_PubReq proto.InternalMessageInfo

func (m *PubReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *PubReq) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *PubReq) GetPartition() uint32 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *PubReq) GetHashCode() uint64 {
	if m != nil {
		return m.HashCode
	}
	return 0
}

func (m *PubReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PubRsp struct {
	Status               int32    `protobuf:"zigzag32,1,opt,name=status" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *PubRsp) Reset()         { *m = PubRsp{} }
func (m *PubRsp) String() string { return proto.CompactTextString(m) }
func (*PubRsp) ProtoMessage()    {}
func (*PubRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_omega_a2f01a01f33ca492, []int{1}
}
func (m *PubRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubRsp.Unmarshal(m, b)
}
func (m *PubRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubRsp.Marshal(b, m, deterministic)
}
func (dst *PubRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubRsp.Merge(dst, src)
}
func (m *PubRsp) XXX_Size() int {
	return xxx_messageInfo_PubRsp.Size(m)
}
func (m *PubRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_PubRsp.DiscardUnknown(m)
}

var xxx_messageInfo_PubRsp proto.InternalMessageInfo

func (m *PubRsp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PubRsp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SubReq struct {
	ClientId  string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Topic     string `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	Group     string `protobuf:"bytes,4,opt,name=group" json:"group,omitempty"`
	//  uint32 max_retry_count = 5;
	//  uint32 max_timeout = 6;
	//  uint32 retry_interval_ms =7;
	//  uint32 item_lifetime_in_Queue = 8;
	Policy               Policy   `protobuf:"varint,9,opt,name=policy,enum=omega.Policy" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SubReq) Reset()         { *m = SubReq{} }
func (m *SubReq) String() string { return proto.CompactTextString(m) }
func (*SubReq) ProtoMessage()    {}
func (*SubReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_omega_a2f01a01f33ca492, []int{2}
}
func (m *SubReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubReq.Unmarshal(m, b)
}
func (m *SubReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubReq.Marshal(b, m, deterministic)
}
func (dst *SubReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubReq.Merge(dst, src)
}
func (m *SubReq) XXX_Size() int {
	return xxx_messageInfo_SubReq.Size(m)
}
func (m *SubReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SubReq.DiscardUnknown(m)
}

var xxx_messageInfo_SubReq proto.InternalMessageInfo

func (m *SubReq) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *SubReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SubReq) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *SubReq) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *SubReq) GetPolicy() Policy {
	if m != nil {
		return m.Policy
	}
	return Policy_PolicyConcurrence
}

type SubRsp struct {
	Status               int32    `protobuf:"zigzag32,1,opt,name=status" json:"status,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SubRsp) Reset()         { *m = SubRsp{} }
func (m *SubRsp) String() string { return proto.CompactTextString(m) }
func (*SubRsp) ProtoMessage()    {}
func (*SubRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_omega_a2f01a01f33ca492, []int{3}
}
func (m *SubRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubRsp.Unmarshal(m, b)
}
func (m *SubRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubRsp.Marshal(b, m, deterministic)
}
func (dst *SubRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubRsp.Merge(dst, src)
}
func (m *SubRsp) XXX_Size() int {
	return xxx_messageInfo_SubRsp.Size(m)
}
func (m *SubRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SubRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SubRsp proto.InternalMessageInfo

func (m *SubRsp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SubRsp) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type SubCfg struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	Group                string   `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
	Version              uint32   `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	MaxRetryCount        uint32   `protobuf:"varint,5,opt,name=max_retry_count,json=maxRetryCount" json:"max_retry_count,omitempty"`
	MaxTimeout           uint32   `protobuf:"varint,6,opt,name=max_timeout,json=maxTimeout" json:"max_timeout,omitempty"`
	RetryIntervalMs      uint32   `protobuf:"varint,7,opt,name=retry_interval_ms,json=retryIntervalMs" json:"retry_interval_ms,omitempty"`
	ItemLifetimeInQueue  uint32   `protobuf:"varint,8,opt,name=item_lifetime_in_queue,json=itemLifetimeInQueue" json:"item_lifetime_in_queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SubCfg) Reset()         { *m = SubCfg{} }
func (m *SubCfg) String() string { return proto.CompactTextString(m) }
func (*SubCfg) ProtoMessage()    {}
func (*SubCfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_omega_a2f01a01f33ca492, []int{4}
}
func (m *SubCfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubCfg.Unmarshal(m, b)
}
func (m *SubCfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubCfg.Marshal(b, m, deterministic)
}
func (dst *SubCfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubCfg.Merge(dst, src)
}
func (m *SubCfg) XXX_Size() int {
	return xxx_messageInfo_SubCfg.Size(m)
}
func (m *SubCfg) XXX_DiscardUnknown() {
	xxx_messageInfo_SubCfg.DiscardUnknown(m)
}

var xxx_messageInfo_SubCfg proto.InternalMessageInfo

func (m *SubCfg) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SubCfg) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *SubCfg) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *SubCfg) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SubCfg) GetMaxRetryCount() uint32 {
	if m != nil {
		return m.MaxRetryCount
	}
	return 0
}

func (m *SubCfg) GetMaxTimeout() uint32 {
	if m != nil {
		return m.MaxTimeout
	}
	return 0
}

func (m *SubCfg) GetRetryIntervalMs() uint32 {
	if m != nil {
		return m.RetryIntervalMs
	}
	return 0
}

func (m *SubCfg) GetItemLifetimeInQueue() uint32 {
	if m != nil {
		return m.ItemLifetimeInQueue
	}
	return 0
}

type Response struct {
	Status               int32    `protobuf:"zigzag32,1,opt,name=status" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_omega_a2f01a01f33ca492, []int{5}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ConsumeReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	Group                string   `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	Sequence             uint64   `protobuf:"varint,5,opt,name=sequence" json:"sequence,omitempty"`
	IsRetry              bool     `protobuf:"varint,6,opt,name=is_retry,json=isRetry" json:"is_retry,omitempty"`
	IgnoreRetryCount     bool     `protobuf:"varint,7,opt,name=ignore_retry_count,json=ignoreRetryCount" json:"ignore_retry_count,omitempty"`
	RetryIntervalMs      int64    `protobuf:"zigzag64,8,opt,name=retry_interval_ms,json=retryIntervalMs" json:"retry_interval_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ConsumeReq) Reset()         { *m = ConsumeReq{} }
func (m *ConsumeReq) String() string { return proto.CompactTextString(m) }
func (*ConsumeReq) ProtoMessage()    {}
func (*ConsumeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_omega_a2f01a01f33ca492, []int{6}
}
func (m *ConsumeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeReq.Unmarshal(m, b)
}
func (m *ConsumeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeReq.Marshal(b, m, deterministic)
}
func (dst *ConsumeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeReq.Merge(dst, src)
}
func (m *ConsumeReq) XXX_Size() int {
	return xxx_messageInfo_ConsumeReq.Size(m)
}
func (m *ConsumeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeReq proto.InternalMessageInfo

func (m *ConsumeReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ConsumeReq) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *ConsumeReq) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *ConsumeReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ConsumeReq) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *ConsumeReq) GetIsRetry() bool {
	if m != nil {
		return m.IsRetry
	}
	return false
}

func (m *ConsumeReq) GetIgnoreRetryCount() bool {
	if m != nil {
		return m.IgnoreRetryCount
	}
	return false
}

func (m *ConsumeReq) GetRetryIntervalMs() int64 {
	if m != nil {
		return m.RetryIntervalMs
	}
	return 0
}

type ConsumeRsp struct {
	Partition            uint32   `protobuf:"varint,2,opt,name=partition" json:"partition,omitempty"`
	Sequence             uint64   `protobuf:"varint,3,opt,name=sequence" json:"sequence,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	RetryCount           uint32   `protobuf:"varint,5,opt,name=retry_count,json=retryCount" json:"retry_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ConsumeRsp) Reset()         { *m = ConsumeRsp{} }
func (m *ConsumeRsp) String() string { return proto.CompactTextString(m) }
func (*ConsumeRsp) ProtoMessage()    {}
func (*ConsumeRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_omega_a2f01a01f33ca492, []int{7}
}
func (m *ConsumeRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeRsp.Unmarshal(m, b)
}
func (m *ConsumeRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeRsp.Marshal(b, m, deterministic)
}
func (dst *ConsumeRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeRsp.Merge(dst, src)
}
func (m *ConsumeRsp) XXX_Size() int {
	return xxx_messageInfo_ConsumeRsp.Size(m)
}
func (m *ConsumeRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeRsp proto.InternalMessageInfo

func (m *ConsumeRsp) GetPartition() uint32 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *ConsumeRsp) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *ConsumeRsp) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ConsumeRsp) GetRetryCount() uint32 {
	if m != nil {
		return m.RetryCount
	}
	return 0
}

func init() {
	proto.RegisterType((*PubReq)(nil), "omega.PubReq")
	proto.RegisterType((*PubRsp)(nil), "omega.PubRsp")
	proto.RegisterType((*SubReq)(nil), "omega.SubReq")
	proto.RegisterType((*SubRsp)(nil), "omega.SubRsp")
	proto.RegisterType((*SubCfg)(nil), "omega.SubCfg")
	proto.RegisterType((*Response)(nil), "omega.Response")
	proto.RegisterType((*ConsumeReq)(nil), "omega.ConsumeReq")
	proto.RegisterType((*ConsumeRsp)(nil), "omega.ConsumeRsp")
	proto.RegisterEnum("omega.Policy", Policy_name, Policy_value)
}

func init() { proto.RegisterFile("omega.proto", fileDescriptor_omega_a2f01a01f33ca492) }

var fileDescriptor_omega_a2f01a01f33ca492 = []byte{
	// 684 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x5d, 0x6f, 0xd3, 0x4a,
	0x10, 0xad, 0x93, 0x34, 0x89, 0xa7, 0xcd, 0x6d, 0xb2, 0xf7, 0xde, 0xca, 0x37, 0xbd, 0x88, 0xc8,
	0x52, 0x51, 0x54, 0x41, 0x03, 0x6d, 0xe1, 0x01, 0xf1, 0x02, 0x79, 0xaa, 0xc4, 0x47, 0x71, 0x78,
	0xe2, 0xc5, 0xda, 0xd8, 0xd3, 0x64, 0x45, 0xec, 0x75, 0x77, 0xd7, 0x55, 0x2b, 0xfe, 0x06, 0xea,
	0x0f, 0xe2, 0x7f, 0x21, 0xa1, 0xdd, 0x75, 0x12, 0x27, 0xad, 0xa8, 0xe0, 0xcd, 0xe7, 0xcc, 0xec,
	0xee, 0x99, 0x33, 0x33, 0x86, 0x2d, 0x9e, 0xe0, 0x84, 0x1e, 0x66, 0x82, 0x2b, 0x4e, 0x36, 0x0d,
	0xf0, 0xbf, 0x39, 0x50, 0x3f, 0xcb, 0xc7, 0x01, 0x5e, 0x90, 0xff, 0xc1, 0x4d, 0x69, 0x82, 0x32,
	0xa3, 0x11, 0x7a, 0x4e, 0xcf, 0xe9, 0xbb, 0xc1, 0x92, 0x20, 0x0f, 0x00, 0x14, 0xcf, 0x58, 0x14,
	0x6a, 0xca, 0xab, 0xd8, 0xb0, 0x61, 0xde, 0xd3, 0x04, 0xf5, 0xe1, 0x8c, 0x0a, 0xc5, 0x14, 0xe3,
	0xa9, 0x57, 0xed, 0x39, 0xfd, 0x56, 0xb0, 0x24, 0xc8, 0x1e, 0xb8, 0x53, 0x2a, 0xa7, 0x61, 0xc4,
	0x63, 0xf4, 0x6a, 0x3d, 0xa7, 0x5f, 0x0b, 0x9a, 0x9a, 0x18, 0xf2, 0x18, 0x09, 0x81, 0x5a, 0x4c,
	0x15, 0xf5, 0x36, 0x7b, 0x4e, 0x7f, 0x3b, 0x30, 0xdf, 0xfe, 0x4b, 0xab, 0x4a, 0x66, 0x64, 0x17,
	0xea, 0x52, 0x51, 0x95, 0x4b, 0x23, 0xa9, 0x13, 0x14, 0x88, 0x78, 0xd0, 0x48, 0x50, 0x4a, 0x3a,
	0x99, 0x8b, 0x99, 0x43, 0xff, 0xc6, 0x81, 0xfa, 0xc8, 0x96, 0xb4, 0x07, 0x6e, 0x34, 0x63, 0x98,
	0xaa, 0x90, 0xc5, 0x45, 0x49, 0x4d, 0x4b, 0x9c, 0xc6, 0xab, 0xf5, 0x56, 0xd6, 0xeb, 0xfd, 0x07,
	0x36, 0x4d, 0x75, 0xa6, 0x18, 0x37, 0xb0, 0x40, 0xb3, 0x13, 0xc1, 0xf3, 0xcc, 0x14, 0xe1, 0x06,
	0x16, 0x90, 0x7d, 0xa8, 0x67, 0x7c, 0xc6, 0xa2, 0x6b, 0xcf, 0xed, 0x39, 0xfd, 0xbf, 0x8e, 0x5a,
	0x87, 0xd6, 0xe9, 0x33, 0x43, 0x06, 0x45, 0xd0, 0x7f, 0x61, 0x75, 0xfd, 0xa2, 0x28, 0xf3, 0xe8,
	0x17, 0x4c, 0x0b, 0x39, 0x16, 0xf8, 0x37, 0x15, 0x73, 0x70, 0x78, 0x3e, 0xb9, 0xa7, 0x47, 0x0b,
	0xcd, 0x95, 0x3b, 0x35, 0x57, 0xcb, 0x9a, 0x3d, 0x68, 0x5c, 0xa2, 0x90, 0xba, 0x5d, 0x35, 0xd3,
	0xae, 0x39, 0x24, 0x8f, 0x60, 0x27, 0xa1, 0x57, 0xa1, 0x40, 0x25, 0xae, 0xc3, 0x88, 0xe7, 0xa9,
	0x32, 0xad, 0x69, 0x05, 0xad, 0x84, 0x5e, 0x05, 0x9a, 0x1d, 0x6a, 0x92, 0x3c, 0x84, 0x2d, 0x9d,
	0xa7, 0x58, 0x82, 0x3c, 0x57, 0x5e, 0xdd, 0xe4, 0x40, 0x42, 0xaf, 0x3e, 0x59, 0x86, 0x1c, 0x40,
	0xc7, 0x5e, 0xc2, 0x52, 0x85, 0xe2, 0x92, 0xce, 0xc2, 0x44, 0x7a, 0x0d, 0x93, 0xb6, 0x63, 0x02,
	0xa7, 0x05, 0xff, 0x4e, 0x92, 0x63, 0xd8, 0x65, 0x0a, 0x93, 0x70, 0xc6, 0xce, 0x51, 0xdf, 0x18,
	0xb2, 0x34, 0xbc, 0xc8, 0x31, 0x47, 0xaf, 0x69, 0x0e, 0xfc, 0xad, 0xa3, 0x6f, 0x8b, 0xe0, 0x69,
	0xfa, 0x51, 0x87, 0xfc, 0x57, 0xd0, 0x0c, 0x50, 0x66, 0x3c, 0x95, 0xf8, 0x07, 0x73, 0xf2, 0xc3,
	0x01, 0x18, 0xf2, 0x54, 0xe6, 0x09, 0xde, 0x3f, 0xfe, 0xbf, 0x63, 0xed, 0xa2, 0x8b, 0xb5, 0x52,
	0x17, 0x49, 0x17, 0x9a, 0x12, 0x2f, 0x72, 0x4c, 0x23, 0x34, 0x7e, 0xd6, 0x82, 0x05, 0x26, 0xff,
	0x41, 0x93, 0x49, 0xeb, 0xb8, 0xf1, 0xb1, 0x19, 0x34, 0x98, 0x34, 0x56, 0x93, 0xc7, 0x40, 0xd8,
	0x24, 0xe5, 0x02, 0x57, 0x1a, 0xd2, 0x30, 0x49, 0x6d, 0x1b, 0x29, 0xf5, 0xe4, 0x4e, 0xcb, 0xb5,
	0x83, 0xe4, 0x96, 0xe5, 0xfe, 0xd7, 0x65, 0xf9, 0x32, 0x5b, 0x5d, 0xe0, 0xca, 0xfa, 0x02, 0x97,
	0xc5, 0x57, 0xd7, 0xc4, 0xcf, 0xf7, 0xb7, 0xb6, 0xdc, 0x5f, 0x3d, 0x1b, 0xb7, 0xe7, 0x07, 0xc4,
	0x42, 0xe8, 0xc1, 0x33, 0xa8, 0xdb, 0xed, 0x20, 0xff, 0x42, 0xc7, 0x7e, 0x0d, 0x79, 0x1a, 0xe5,
	0x42, 0xe8, 0x3b, 0xdb, 0x1b, 0xa4, 0x0d, 0xdb, 0x96, 0x1e, 0xa1, 0x60, 0x74, 0xd6, 0x76, 0x8e,
	0xbe, 0x3b, 0xb0, 0xfd, 0x41, 0xef, 0xd5, 0x08, 0xc5, 0x25, 0x8b, 0x90, 0xec, 0x43, 0xf5, 0x2c,
	0x1f, 0x93, 0xc5, 0xb6, 0x99, 0x9d, 0xef, 0x96, 0xa1, 0xcc, 0xfc, 0x0d, 0x9d, 0x36, 0x2a, 0xa5,
	0x8d, 0x56, 0xd3, 0x46, 0xf3, 0xb4, 0x27, 0xe0, 0xbe, 0x8e, 0xe3, 0x62, 0xcf, 0x4a, 0xd1, 0xe1,
	0xf9, 0xa4, 0xbb, 0x53, 0xc0, 0xf9, 0xb4, 0xf9, 0x1b, 0xe4, 0x39, 0x34, 0x0a, 0xf7, 0x48, 0xa7,
	0x88, 0x2e, 0x87, 0xa9, 0xbb, 0x4e, 0xe9, 0x17, 0xfa, 0xce, 0x53, 0xe7, 0x8d, 0xff, 0xb9, 0x37,
	0x61, 0x6a, 0x9a, 0x8f, 0x0f, 0x23, 0x9e, 0x0c, 0x92, 0xd9, 0xc9, 0xc9, 0xc9, 0x40, 0x46, 0x53,
	0x8c, 0xf3, 0x19, 0x8a, 0x41, 0x36, 0x1e, 0x64, 0xe3, 0x71, 0xdd, 0xfc, 0xa1, 0x8f, 0x7f, 0x06,
	0x00, 0x00, 0xff, 0xff, 0xf0, 0xe7, 0xe5, 0x45, 0xb0, 0x05, 0x00, 0x00,
}
